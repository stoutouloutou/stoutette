#Backup machine
#
#Coté raspberry : configurations et scripts

## USB MANAGEMENT :
	trigger to launch scripts when SX20 (not usb mass storage but mtp) plugged : /etc/udev/rules.d/10-camera-automount.rules
		launch /bin/bash /home/pi/pitravel/FINAL/action_unplugcanon when removed, plugcanon when added
		which mount it in /media/sx20 and display infos on LCD
		and unmount it when removed

	trigger to launch script when USB device plugged : /etc/udev/rules.d/10-usb-automount.rules
		launch /home/pi/pitravel/CLEAN2/mountscript add '%E{dir_name}' '%E{ID_FS_UUID}' '%E{ID_FS_TYPE}' %k
		when added, mount it to a created dir in /media or /mnt if special backup device
		/home/pi/pitravel/CLEAN2/mountscript remove '%E{dir_name}' '%E{ID_FS_UUID}' '%E{ID_FS_TYPE}'
		when removed, unmount an remove the dir
		in both cases, print a message to LCD
	

definition des scripts lancés au branch

# automount des peripheriques usb :
	/etc/udev/rules.d/10-my-media-automount.rules

		# vim:enc=utf-8:nu:ai:si:et:ts=4:sw=4:ft=udevrules:
		#
		# /etc/udev/rules.d/10-my-media-automount.rules

		KERNEL!="sd[a-z][0-9]*", GOTO="my_media_automount_end"
		ACTION=="add", PROGRAM!="/sbin/blkid %N", GOTO="my_media_automount_end"

		# import some useful filesystem info as variables
		IMPORT{program}="/sbin/blkid -o udev -p %N"

		# get the label if present, otherwise assign one based on device/partition
		ENV{ID_FS_LABEL}!="", ENV{dir_name}="%E{ID_FS_LABEL}"
		ENV{ID_FS_LABEL}=="", ENV{dir_name}="usbhd-%k"

		# create the dir in /media and symlink it to /mnt
		ACTION=="add", RUN+="/bin/mkdir -p '/media/%E{dir_name}'"

		# global mount options
		ACTION=="add", ENV{mount_options}="relatime"

		# filesystem-specific mount options (777/666 dir/file perms for ntfs/vfat)
		ACTION=="add", ENV{ID_FS_TYPE}=="vfat|ntfs", ENV{mount_options}="$env{mount_options},gid=100,dmask=000,fmask=111,utf8"

		# automount ntfs filesystems using ntfs-3g driver
		ACTION=="add", ENV{ID_FS_TYPE}=="ntfs", RUN+="/bin/mount -t ntfs-3g -o %E{mount_options} /dev/%k '/media/%E{dir_name}'"

		# automount all other filesystems
		ACTION=="add", ENV{ID_FS_TYPE}!="ntfs", RUN+="/bin/mount -t auto -o %E{mount_options} /dev/%k '/media/%E{dir_name}'"

		#cree un fichier spécifiqe a un peripherique
		ENV{ID_FS_LABEL}=="CORSAIR", ENV{ID_FS_UUID}="72E8-2066", ACTION=="add", RUN+="/bin/touch /home/pi/pitravel/scripts/devicesplugged/CORSAIR-72E8-2066"
		ENV{ID_FS_LABEL}=="Free_Agent_-_Photos_et_Music", ENV{ID_FS_UUID}="428C03B88C03A60F", ACTION=="add", RUN+="/bin/touch /home/pi/pitravel/scripts/devicesplugged/Free_Agent_03B88C03A60F"

		#run un script si periph de stockage (none elimine le reste ?)
		ACTION=="add", RUN+="/bin/bash /home/pi/pitravel/scripts/action_plugusb '%E{dir_name}'"

		# clean up after device removal
		ACTION=="remove", ENV{dir_name}!="", RUN+="/bin/umount -l '/media/%E{dir_name}'", RUN+="/bin/rmdir '/media/%E{dir_name}'"

		#supprime les fichiers specifiques
		ENV{ID_FS_LABEL}=="CORSAIR", ENV{ID_FS_UUID}="72E8-2066", ACTION=="remove", RUN+="/bin/rm /home/pi/pitravel/scripts/devicesplugged/CORSAIR-72E8-2066"
		ENV{ID_FS_LABEL}=="Free_Agent_-_Photos_et_Music", ENV{ID_FS_UUID}="428C03B88C03A60F", ACTION=="remove", RUN+="/bin/rm /home/pi/pitravel/scripts/devicesplugged/Free_Agent_03B88C03A60F"

		#lance un script au retrait (pas de sda car retire sda1 puis sda et relance le script apres...)
		ACTION=="remove", RUN+="/bin/bash /home/pi/pitravel/scripts/action_unplugusb '%E{dir_name}'"

		# exit
		LABEL="my_media_automount_end"


	#puis udevadm control --reload-rules

## reconnaissance spécifique de certains modeles :
	dans le meme fichier de rules, ajouter les lignes de lancement de script spécifique: 
	#lancement de script spéRcifique a la RECONNAISSANCE spe de certains modeles
		ENV{ID_FS_LABEL}=="CORSAIR", ENV{ID_FS_UUID}="72E8-2066", ACTION=="add", RUN+="/usr/script"

	la commande
		sudo blkid -o udev -p /dev/sda1
	recupere les variables necessaires à lidentification :
		free agent :
			ID_FS_LABEL_ENC=Free\x20Agent\x20-\x20Photos\x20et\x20Music
			ID_FS_UUID=428C03B88C03A60F

sendemail
modif line 1907 ;
invalid SSL_version specified at /usr/share/perl5/IO/Socket/SSL.pm line 332
SSLv3 TLSv1'in sendemail line 1907 to 'SSLv3''


## GPhoto2
	pour la reconnaissance des cameras qui sont en MTP et non mass unit storage...
	installer 
	
	
	## recognizee mtp devices :libgphoto2
sudo apt-get install libtool libltdl-dev pkg-config libexif-dev libjpeg-dev gphotofs

wget & untar libgphoto2 http://gphoto.sourceforge.net/
./configure
make


	#UDEV pour ca :
		#mount des camera en MTP et non simple usb mass storage
		#canon sx20
		# udev rules file for libgphoto2 devices (for udev 175 version)
		ENV{ID_USB_INTERFACES}=="", IMPORT{builtin}="usb_id"
		ACTION=="add", ATTRS{idVendor}=="04a9", ATTRS{idProduct}=="31e4", RUN+="/bin/bash /home/pi/pitravel/scripts/action_plugcanon"
		ACTION=="remove", ATTRS{idVendor}=="04a9", ATTRS{idProduct}=="31e4", RUN+="/bin/bash /home/pi/pitravel/scripts/action_unplugcanon"
		LABEL="libgphoto2_rules_end"

	# dans le script action_plugusb, monter	avec
		gphotofs /mnt/media/..

envoi de fichier par mail si reseau ?
	smtp-cli :  http://www.logix.cz/michal/devel/smtp-cli/
	sudo apt-get libfile-libmagic-perl libmime-lite-perl
		#commande:
		./smtp-cli --server=smtp.bbox.fr --from rasp@meoz.fr --to stout@meoz.fr --subject "Simple test with attachments" --body-plain "Log files are attached." --attach ~/IMG_7977.JPG


fonction de redimensionnement
	apt-get install imagemagick


## faster than imagagemagick ?
libjpeg
$ curl -O http://www.ijg.org/files/jpegsrc.v8c.tar.gz
$ tar zxvf jpegsrc.v8c.tar.gz
$ cd jpeg-8c/
$ ./configure
$ make
$ sudo make install

epeg:
https://github.com/mattes/epeg
git vlone, make make install



########
#######TO DO :
########		
script montage du disque de serveur si reseau
	vi /etc/ifplugd/action.d/homeservermount

fonction de copie

upload piwigo ? ou blog ?

backup :
	reconnaissance du DD => quel repertoires sources et dest
	verifier accessibilité source (NAS reseau)
	rsync

check de date à network up
	vi /etc/ifplugd/action.d/homeservermount
	

